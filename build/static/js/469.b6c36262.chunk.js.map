{"version":3,"file":"static/js/469.b6c36262.chunk.js","mappings":"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","sources":["components/CustomizationPage.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { CartContext } from '../context/AppContext'; // Fixed import path\r\n\r\n// Rest of the component stays the same\r\n\r\nconst CustomizationPage = () => {\r\n  const { addToCart } = useContext(CartContext);\r\n  const [tshirtColor, setTshirtColor] = useState('#ffffff');\r\n  const [selectedText, setSelectedText] = useState('');\r\n  const [textColor, setTextColor] = useState('#000000');\r\n  const [fontSize, setFontSize] = useState(24);\r\n  const [textPosition, setTextPosition] = useState({ x: 150, y: 150 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  \r\n  const colors = ['#ffffff', '#000000', '#ff0000', '#00ff00', '#0000ff', '#ffff00', '#ff00ff', '#00ffff', '#808080'];\r\n\r\n  const handleTextChange = (e) => {\r\n    setSelectedText(e.target.value);\r\n  };\r\n\r\n  const handleFontSizeChange = (e) => {\r\n    setFontSize(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setImagePreview(e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = () => {\r\n    // Create a custom product\r\n    const customProduct = {\r\n      id: `custom-${Date.now()}`,\r\n      title: 'Custom T-Shirt Design',\r\n      price: 599.99,\r\n      imgSrc: '/assets/img1.png', // Placeholder image\r\n      size: 'Medium',\r\n      color: tshirtColor,\r\n      description: `Custom design with text: \"${selectedText}\"`,\r\n      isCustom: true\r\n    };\r\n    \r\n    // Add to cart\r\n    addToCart(customProduct);\r\n    \r\n    // Show success message\r\n    alert('Design added to cart!');\r\n  };\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"customization-page\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <h1>Create Your Custom Design</h1>\r\n      \r\n      <div className=\"customization-container\">\r\n        <div className=\"design-options\">\r\n          <div className=\"option-group\">\r\n            <h3>T-Shirt Color</h3>\r\n            <div className=\"color-picker\">\r\n              {colors.map((color) => (\r\n                <div \r\n                  key={color} \r\n                  className={`color-option ${color === tshirtColor ? 'selected' : ''}`}\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => setTshirtColor(color)}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"option-group\">\r\n            <h3>Add Text</h3>\r\n            <input \r\n              type=\"text\" \r\n              value={selectedText} \r\n              onChange={handleTextChange} \r\n              placeholder=\"Enter your text\"\r\n              className=\"text-input\"\r\n            />\r\n            \r\n            <div className=\"text-controls\">\r\n              <div className=\"control-group\">\r\n                <label>Text Color:</label>\r\n                <input \r\n                  type=\"color\" \r\n                  value={textColor} \r\n                  onChange={(e) => setTextColor(e.target.value)}\r\n                  className=\"color-input\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"control-group\">\r\n                <label>Font Size:</label>\r\n                <input \r\n                  type=\"range\" \r\n                  min=\"12\" \r\n                  max=\"48\" \r\n                  value={fontSize} \r\n                  onChange={handleFontSizeChange}\r\n                  className=\"range-input\"\r\n                />\r\n                <span>{fontSize}px</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"option-group\">\r\n            <h3>Upload Image</h3>\r\n            <input \r\n              type=\"file\" \r\n              accept=\"image/*\" \r\n              onChange={handleImageUpload}\r\n              className=\"file-input\"\r\n            />\r\n          </div>\r\n          \r\n          <button className=\"add-to-cart-button\" onClick={handleAddToCart}>\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"design-preview\">\r\n          <div \r\n            className=\"tshirt-canvas\" \r\n            style={{ backgroundColor: tshirtColor }}\r\n            ref={canvasRef}\r\n          >\r\n            {imagePreview && (\r\n              <img \r\n                src={imagePreview} \r\n                alt=\"Uploaded design\" \r\n                className=\"uploaded-image\"\r\n              />\r\n            )}\r\n            {selectedText && (\r\n              <div\r\n                className=\"preview-text\"\r\n                style={{\r\n                  color: textColor,\r\n                  fontSize: `${fontSize}px`,\r\n                }}\r\n              >\r\n                {selectedText}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CustomizationPage;\r\n"],"names":["CustomizationPage","addToCart","useContext","CartContext","tshirtColor","setTshirtColor","useState","selectedText","setSelectedText","textColor","setTextColor","fontSize","setFontSize","textPosition","setTextPosition","x","y","isDragging","setIsDragging","imagePreview","setImagePreview","canvasRef","useRef","_jsxs","motion","div","className","initial","opacity","animate","exit","transition","duration","children","_jsx","map","color","concat","style","backgroundColor","onClick","type","value","onChange","e","target","placeholder","min","max","parseInt","accept","file","files","reader","FileReader","onload","result","readAsDataURL","handleAddToCart","customProduct","id","Date","now","title","price","imgSrc","size","description","isCustom","alert","ref","src","alt"],"sourceRoot":""}