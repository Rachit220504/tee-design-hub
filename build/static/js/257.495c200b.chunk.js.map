{"version":3,"file":"static/js/257.495c200b.chunk.js","mappings":"+LAkHA,QA7GA,WACE,MAAOA,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,YAAEG,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,KAEnCC,EAAAA,EAAAA,YAAU,KAERJ,GAAW,GACXK,YAAW,KAyBTR,EAvBmBI,EAAc,CAC/B,CACEK,GAAI,UACJC,YAAa,kBACbC,KAAM,aACNC,MAAO,QACPC,OAAQ,YACRC,MAAO,CACL,CAAEL,GAAI,QAASM,MAAO,oBAAqBC,SAAU,EAAGC,MAAO,QAC/D,CAAER,GAAI,QAASM,MAAO,kBAAmBC,SAAU,EAAGC,MAAO,UAGjE,CACER,GAAI,UACJC,YAAa,kBACbC,KAAM,aACNC,MAAO,OACPC,OAAQ,aACRC,MAAO,CACL,CAAEL,GAAI,QAASM,MAAO,kBAAmBC,SAAU,EAAGC,MAAO,WAG/D,IAEJd,GAAW,EAAM,GAChB,KAAK,GACP,CAACC,IAEJ,MAAMc,EAAkBL,IACtB,OAAOA,GACL,IAAK,YAAa,MAAO,mBACzB,IAAK,aAAc,MAAO,oBAC1B,IAAK,UAAW,MAAO,iBACvB,IAAK,YAAa,MAAO,mBACzB,QAAS,MAAO,iBAClB,EAGF,OAAIX,GAEAiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBACfE,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BAMPF,EAAAA,EAAAA,MAACI,EAAAA,EAAOC,IAAG,CACTJ,UAAU,cACVK,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAAIL,SAAA,EAErBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cAEe,IAAlBtB,EAAO8B,QACNV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBACbE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gFACHC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAG,YAAYX,UAAU,kBAAiBC,SAAC,iBAGnDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SACzBtB,EAAOiC,KAAIC,IACVd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,UAAQY,EAAMvB,gBAClBS,EAAAA,EAAAA,MAAA,KAAGC,UAAU,aAAYC,SAAA,CAAC,aAAW,IAAIa,KAAKD,EAAMtB,MAAMwB,4BAE5Db,EAAAA,EAAAA,KAAA,OAAKF,UAAS,gBAAAgB,OAAkBlB,EAAee,EAAMpB,SAAUQ,SAC5DY,EAAMpB,OAAOwB,OAAO,GAAGC,cAAgBL,EAAMpB,OAAO0B,MAAM,SAI/DjB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SACzBY,EAAMnB,MAAMkB,KAAIQ,IACfrB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,aAAYC,SAAEmB,EAAKzB,SAChCI,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,QAAMmB,EAAKxB,aACxCG,EAAAA,EAAAA,MAAA,KAAGC,UAAU,aAAYC,SAAA,CAAC,OAAKmB,EAAKvB,MAAMwB,QAAQ,QAHnBD,EAAK/B,SAQ1CU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,cAAaC,SAAA,CAAC,cAAYY,EAAMrB,MAAM6B,QAAQ,OAC3DnB,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,SAAC,sBAvBRY,EAAMxB,UA+BnD,C","sources":["components/OrdersPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport { UserContext } from \"../context/AppContext\";\r\n\r\nfunction OrdersPage() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching orders from API\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      // Mock orders data - in a real app, this would be from your API\r\n      const mockOrders = currentUser ? [\r\n        {\r\n          id: \"ord-001\",\r\n          orderNumber: \"TDH-230501-7632\",\r\n          date: \"2023-05-01\",\r\n          total: 1299.97,\r\n          status: \"delivered\",\r\n          items: [\r\n            { id: \"item1\", title: \"Classic White Tee\", quantity: 2, price: 299.99 },\r\n            { id: \"item2\", title: \"Urban Black Tee\", quantity: 1, price: 699.99 }\r\n          ]\r\n        },\r\n        {\r\n          id: \"ord-002\",\r\n          orderNumber: \"TDH-230612-3816\",\r\n          date: \"2023-06-12\",\r\n          total: 399.99,\r\n          status: \"processing\",\r\n          items: [\r\n            { id: \"item3\", title: \"Casual Blue Tee\", quantity: 1, price: 399.99 }\r\n          ]\r\n        }\r\n      ] : [];\r\n      setOrders(mockOrders);\r\n      setLoading(false);\r\n    }, 1500);\r\n  }, [currentUser]);\r\n\r\n  const getStatusClass = (status) => {\r\n    switch(status) {\r\n      case \"delivered\": return \"status-delivered\";\r\n      case \"processing\": return \"status-processing\";\r\n      case \"shipped\": return \"status-shipped\";\r\n      case \"cancelled\": return \"status-cancelled\";\r\n      default: return \"status-pending\";\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"orders-page loading\">\r\n        <div className=\"loader-spinner\"></div>\r\n        <p>Loading your orders...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"orders-page\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <h1>My Orders</h1>\r\n      \r\n      {orders.length === 0 ? (\r\n        <div className=\"empty-orders\">\r\n          <i className=\"fas fa-box-open\"></i>\r\n          <h2>No Orders Yet</h2>\r\n          <p>You haven't placed any orders yet. Start shopping to see your orders here!</p>\r\n          <Link to=\"/products\" className=\"shop-now-button\">Shop Now</Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"orders-list\">\r\n          {orders.map(order => (\r\n            <div className=\"order-card\" key={order.id}>\r\n              <div className=\"order-header\">\r\n                <div>\r\n                  <h3>Order #{order.orderNumber}</h3>\r\n                  <p className=\"order-date\">Placed on {new Date(order.date).toLocaleDateString()}</p>\r\n                </div>\r\n                <div className={`order-status ${getStatusClass(order.status)}`}>\r\n                  {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"order-items\">\r\n                {order.items.map(item => (\r\n                  <div className=\"order-item\" key={item.id}>\r\n                    <p className=\"item-title\">{item.title}</p>\r\n                    <p className=\"item-quantity\">Qty: {item.quantity}</p>\r\n                    <p className=\"item-price\">Rs. {item.price.toFixed(2)}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"order-footer\">\r\n                <p className=\"order-total\">Total: Rs. {order.total.toFixed(2)}</p>\r\n                <button className=\"view-details-btn\">View Details</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default OrdersPage;"],"names":["orders","setOrders","useState","loading","setLoading","currentUser","useContext","UserContext","useEffect","setTimeout","id","orderNumber","date","total","status","items","title","quantity","price","getStatusClass","_jsxs","className","children","_jsx","motion","div","initial","opacity","animate","exit","length","Link","to","map","order","Date","toLocaleDateString","concat","charAt","toUpperCase","slice","item","toFixed"],"sourceRoot":""}